
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


security:
  - bearerAuth: []

paths:

  /api/v1/forum:
    get:
      summary: Get all forums
      tags: [Forum]
      responses:
        '200':
          description: List of forums
    post:
      summary: Create a forum
      tags: [Forum]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: Forum category
        responses:
          '201':
            description: Forum created

  /api/v1/forum/{id}:
    get:
      summary: Get a forum by ID
      tags: [Forum]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Forum details
    put:
      summary: Update a forum
      tags: [Forum]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: Forum category
      responses:
        '200':
          description: Forum updated
    delete:
      summary: Delete a forum
      tags: [Forum]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Forum deleted

  /api/v1/forum/{forumId}/like:
    post:
      summary: Like a forum
      tags: [Forum]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Forum liked
    delete:
      summary: Unlike a forum
      tags: [Forum]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Forum unliked
    get:
      summary: Check if forum is liked by user
      tags: [Forum]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Like status
  /api/v1/news:
    get:
      summary: Get all news
      tags: [News]
      responses:
        '200':
          description: List of news
    post:
      summary: Create news
      tags: [News]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: News category
        responses:
          '201':
            description: News created

  /api/v1/news/{id}:
    get:
      summary: Get news by ID
      tags: [News]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: News details
    put:
      summary: Update news
      tags: [News]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: News category
      responses:
        '200':
          description: News updated
    delete:
      summary: Delete news
      tags: [News]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: News deleted

  /api/v1/news/{newsId}/like:
    post:
      summary: Like news
      tags: [News]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: News liked
    delete:
      summary: Unlike news
      tags: [News]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: News unliked
    get:
      summary: Check if news is liked by user
      tags: [News]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Like status

  /api/v1/article:
    get:
      summary: Get all articles
      tags: [Article]
      responses:
        '200':
          description: List of articles
    post:
      summary: Create an article
      tags: [Article]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: Article category
        responses:
          '201':
            description: Article created

  /api/v1/article/{id}:
    get:
      summary: Get an article by ID
      tags: [Article]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article details
    put:
      summary: Update an article
      tags: [Article]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  description: Article category
      responses:
        '200':
          description: Article updated
    delete:
      summary: Delete an article
      tags: [Article]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Article deleted

  /api/v1/article/{articleId}/like:
    post:
      summary: Like an article
      tags: [Article]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article liked
    delete:
      summary: Unlike an article
      tags: [Article]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article unliked
    get:
      summary: Check if article is liked by user
      tags: [Article]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Like status

  /api/v1/lawyer:
    post:
      summary: Create a lawyer profile
      tags: [Lawyer]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - slogan
                - summary
                - lawfirm_name
                - consultationRate
              properties:
                slogan:
                  type: string
                  description: Lawyer's slogan
                summary:
                  type: string
                  description: Brief summary of the lawyer
                lawfirm_name:
                  type: string
                  description: Name of the law firm
                consultationRate:
                  type: object
                  required:
                    - min
                    - max
                  properties:
                    min:
                      type: number
                      minimum: 0
                    max:
                      type: number
                      minimum: 0
                  description: Consultation rate range
                documentDeliveryRate:
                  type: object
                  properties:
                    min:
                      type: number
                      minimum: 0
                    max:
                      type: number
                      minimum: 0
                  description: Document delivery rate range
                civilCase_specialized:
                  type: array
                  items:
                    type: string
                  description: List of civil case specializations
                criminalCase_specialized:
                  type: array
                  items:
                    type: string
                  description: List of criminal case specializations
                verificationDocs:
                  type: array
                  items:
                    type: string
                  description: List of verification document URLs or IDs
      responses:
        '201':
          description: Lawyer profile created
    get:
      summary: Get all lawyers
      tags: [Lawyer]
      responses:
        '200':
          description: List of lawyers

  /api/v1/lawyer/{id}:
    get:
      summary: Get lawyer by ID
      tags: [Lawyer]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lawyer details
    put:
      summary: Update lawyer profile
      tags: [Lawyer]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slogan:
                  type: string
                  description: Lawyer's slogan
                summary:
                  type: string
                  description: Brief summary of the lawyer
                lawfirm_name:
                  type: string
                  description: Name of the law firm
                consultationRate:
                  type: object
                  properties:
                    min:
                      type: number
                      minimum: 0
                    max:
                      type: number
                      minimum: 0
                  description: Consultation rate range
                documentDeliveryRate:
                  type: object
                  properties:
                    min:
                      type: number
                      minimum: 0
                    max:
                      type: number
                      minimum: 0
                  description: Document delivery rate range
                civilCase_specialized:
                  type: array
                  items:
                    type: string
                  description: List of civil case specializations
                criminalCase_specialized:
                  type: array
                  items:
                    type: string
                  description: List of criminal case specializations
                verificationDocs:
                  type: array
                  items:
                    type: string
                  description: List of verification document URLs or IDs
      responses:
        '200':
          description: Lawyer updated
    delete:
      summary: Delete lawyer profile
      tags: [Lawyer]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Lawyer deleted

  /api/v1/lawyer/{id}/status:
    put:
      summary: Change lawyer verification status
      tags: [Lawyer]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_verified_by_council:
                  type: boolean
                  description: Set to true to verify, false to unverify
                has_law_license:
                  type: boolean
                  description: Set to true if lawyer has a law license
      responses:
        '200':
          description: Status updated

  /api/v1/caseRequest:
    post:
      summary: Create a case request
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_type:
                  type: string
                  enum: [civil, criminal, unknown]
                  description: Type of case
                description:
                  type: string
                  description: Description of the case
                consultation_date:
                  type: string
                  format: date-time
                  description: Desired consultation date
                note:
                  type: string
                  description: Additional notes
                file:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Attachments
        responses:
          '201':
            description: Case request created
    get:
      summary: Get all case requests
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of case requests

  /api/v1/caseRequest/client/{id}:
    get:
      summary: Get case requests by client ID
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of case requests

  /api/v1/caseRequest/lawyer/{id}:
    get:
      summary: Get case requests by lawyer ID
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of case requests

  /api/v1/caseRequest/{id}:
    get:
      summary: Get case request by ID
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Case request details
    put:
      summary: Update case request
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Case request updated
    delete:
      summary: Cancel case request
      tags: [CaseRequest]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Case request cancelled

  /api/v1/hiring/client:
    get:
      summary: Get hirings by client ID
      tags: [Hiring]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of hirings

  /api/v1/hiring/lawyer:
    get:
      summary: Get hirings by lawyer ID
      tags: [Hiring]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of hirings

  /api/v1/hiring/create/{id}:
    post:
      summary: Create a hiring
      tags: [Hiring]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Hiring created

  /api/v1/hiring/{id}:
    get:
      summary: Get hiring by ID
      tags: [Hiring]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hiring details
    put:
      summary: Update hiring
      tags: [Hiring]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hiring updated
    delete:
      summary: Cancel hiring
      tags: [Hiring]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Hiring cancelled

  /api/v1/appointment/create/{id}:
    post:
      summary: Create an appointment
      tags: [Appointment]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Appointment created

  /api/v1/appointment/{id}:
    put:
      summary: Update an appointment
      tags: [Appointment]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Appointment updated
    delete:
      summary: Delete an appointment
      tags: [Appointment]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Appointment deleted

  /api/v1/appointment/user/{id}:
    get:
      summary: Get appointments for a user
      tags: [Appointment]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of appointments

  /api/v1/chat:
    post:
      summary: Add new chat message
      tags: [Chat]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - receiver_id
                - text
              properties:
                receiver_id:
                  type: string
                  description: The user ID of the chat recipient
                text:
                  type: string
                  description: The chat message text
      responses:
        '201':
          description: Chat message added

  /api/v1/chat/{id}:
    get:
      summary: Get chat by ID
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chat details

  /api/v1/chat/ai:
    post:
      summary: Add new AI chat message
      tags: [Chat]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: AI chat message added

  /api/v1/payment/create/{id}:
    post:
      summary: Create a payment
      tags: [Payment]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Payment amount
      responses:
        '201':
          description: Payment created

  /api/v1/payment:
    get:
      summary: Get all payments
      tags: [Payment]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of payments

  /api/v1/payment/{id}:
    post:
      summary: Verify payment
      tags: [Payment]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Payment verified

  /api/v1/workingDay:
    post:
      summary: Create working day
      tags: [WorkingDay]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Working day created
    put:
      summary: Update working day
      tags: [WorkingDay]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Working day updated




  /api/v1/forum/{forumId}/comment:
    post:
      summary: Add comment to forum
      tags: [Comment]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '201':
          description: Comment added
    get:
      summary: Get comments for forum
      tags: [Comment]
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of comments

  /api/v1/forum/{forumId}/comment/{commentId}:
    put:
      summary: Edit comment
      tags: [Comment]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Comment updated
    delete:
      summary: Delete comment
      tags: [Comment]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted

  /api/v1/report/forum:
    get:
      summary: Get all forum reports
      tags: [Report]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of forum reports

  /api/v1/report/forum/{reportId}:
    get:
      summary: Get forum report by ID
      tags: [Report]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Forum report details

  /api/v1/forum/{forumId}/report:
    post:
      summary: Create forum report
      tags: [Report]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: forumId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '201':
          description: Forum report created

  /api/v1/comment/{commentId}/report:
    post:
      summary: Create comment report
      tags: [Report]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '201':
          description: Comment report created

  /api/v1/report/comment:
    get:
      summary: Get all comment reports
      tags: [Report]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of comment reports

  /api/v1/report/comment/commentId:
    get:
      summary: Get comment report by ID
      tags: [Report]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comment report details
